{"ast":null,"code":"var _jsxFileName = \"/home/itayg/CodeProjects/JS/BobbyBotReact/Bobby/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport BobbyMouth from './components/BobbyMouth';\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nconst mainText = \"hello, world!\";\n\nfunction SpeechSynthesis(props) {\n  let [value, setValue] = useState('');\n  const {\n    speak\n  } = useSpeechSynthesis();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      visibility: \"hidden\"\n    },\n    id: \"divThingy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: value,\n    onChange: event => setValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      value = {\n        toSpeak\n      };\n      speak({\n        text: value\n      });\n    },\n    id: \"btnInvis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Speak\"));\n}\n\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SpeechSynthesis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BobbyMouth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\n\nwindow.onload = () => {\n  document.getElementById(\"btnInvis\").click();\n};","map":{"version":3,"sources":["/home/itayg/CodeProjects/JS/BobbyBotReact/Bobby/src/App.js"],"names":["React","useState","BobbyMouth","useSpeechSynthesis","mainText","SpeechSynthesis","props","value","setValue","speak","visibility","event","target","toSpeak","text","App","window","onload","document","getElementById","click"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,kBAAR,QAAiC,kBAAjC;AAEA,MAAMC,QAAQ,GAAG,eAAjB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAG9B,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAYN,kBAAkB,EAApC;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,UAAU,EAAE;AAAb,KAAZ;AAAoC,IAAA,EAAE,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,KAAK,EAAEH,KADT;AAEE,IAAA,QAAQ,EAAGI,KAAD,IAAWH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE;AAAQ,IAAA,OAAO,EAAE,MAAM;AACrBA,MAAAA,KAAK,GAAG;AAACM,QAAAA;AAAD,OAAR;AACAJ,MAAAA,KAAK,CAAC;AAACK,QAAAA,IAAI,EAAEP;AAAP,OAAD,CAAL;AAAqB,KAFvB;AAII,IAAA,EAAE,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF;AAiBD;;AAGD,eAAe,SAASQ,GAAT,GAAe;AAC5B,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF;AAWD;;AAEDC,MAAM,CAACC,MAAP,GAAgB,MAAM;AACpBC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC;AACD,CAFD","sourcesContent":["import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BobbyMouth from './components/BobbyMouth';\nimport {useSpeechSynthesis} from \"react-speech-kit\";\n\nconst mainText = \"hello, world!\"\n\nfunction SpeechSynthesis(props) {\n\n\n  let [value, setValue] = useState('');\n  const { speak } = useSpeechSynthesis();\n\n  return (\n    <div style={{visibility: \"hidden\"}} id=\"divThingy\">\n\n      <textarea \n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      />\n\n      <button onClick={() => {\n        value = {toSpeak}\n        speak({text: value})}\n        \n        } id=\"btnInvis\">Speak</button>\n    </div>\n    \n  );\n\n}\n\n\nexport default function App() {\n  return (\n\n    <div>\n      <SpeechSynthesis></SpeechSynthesis>\n      <BobbyMouth></BobbyMouth>\n\n      \n    </div>\n    \n  );\n  \n}\n\nwindow.onload = () => {\n  document.getElementById(\"btnInvis\").click()\n}"]},"metadata":{},"sourceType":"module"}